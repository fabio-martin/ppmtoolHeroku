{"version":3,"sources":["actions/types.js","reducers/backlogReducer.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/CreateProjectButton.jsx","actions/projectActions.js","components/Project/ProjectItem.jsx","components/Dashboard.jsx","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.jsx","components/Project/UpdateProject.js","components/Project/AddProject.jsx","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","reportWebVitals.js","index.js"],"names":["GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","initialState","projectTasks","projectTask","projects","project","user","validToken","booleanActionPayload","payload","combineReducers","errors","state","action","type","filter","projectIdentifier","backlog","projectSequence","security","middleware","thunk","ReactReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","CreateProjectButton","Fragment","to","className","createProject","history","dispatch","a","axios","post","push","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectName","description","onClick","bind","Component","connect","confirm","delete","Dashboard","getProjects","map","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","userIsNotAuthenticaded","userIsAuthenticaded","fullName","data-toggle","data-target","UpdateProject","start_date","end_date","onChange","onSubmit","match","params","getProject","nextProps","setState","e","target","name","value","preventDefault","updateProject","classnames","placeholder","disabled","AddProject","newProject","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","console","log","tasks","todoItems","task","status","inProgressItems","doneItems","ProjectBoard","getBackLog","BoardContent","length","projectNotFound","role","boardAlgorithm","AddProjectTask","newProjectTask","dueDate","addProjectTask","project_task","UpdateProjectTask","updatedProjectTask","created_at","updateProjectTask","getProjectTask","split","put","Landing","Register","newUser","username","password","confirmPassword","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cb6e0bb.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\"\r\nexport const GET_PROJECTS = \"GET_PROJECTS\"\r\nexport const GET_PROJECT = \"GET_PROJECT\"\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\"\r\n\r\n// Types for backlog\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\"\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\"\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\"\r\n\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\"","/* eslint-disable import/no-anonymous-default-export */\r\nimport { GET_BACKLOG, GET_PROJECT_TASK, UPDATE_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/types\"\r\n\r\nconst initialState = { \r\n    projectTasks:[],\r\n    projectTask:{}\r\n}\r\n\r\nexport default function(state=initialState, action){\r\n    switch(action.type){\r\n        case GET_BACKLOG:\r\n            return {\r\n                ...state,\r\n                projectTasks: action.payload\r\n            }\r\n        case GET_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                projectTask: action.payload\r\n            }\r\n        case DELETE_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                projectTasks: state.projectTasks.filter(projectTask => projectTask.projectSequence !== action.payload)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","/* eslint-disable import/no-anonymous-default-export */\r\nimport { GET_ERRORS } from \"./../actions/types\"\r\n\r\nconst initialState = {}\r\n\r\nexport default function(state=initialState, action) {\r\n    switch(action.type){\r\n        case GET_ERRORS: \r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import {DELETE_PROJECT, GET_PROJECT, GET_PROJECTS} from \"./../actions/types\"\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project:{}\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function(state=initialState, action){\r\n    switch(action.type){\r\n        case GET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                projects: action.payload\r\n            }\r\n        case GET_PROJECT:\r\n            return {\r\n                ...state,\r\n                project: action.payload\r\n            }\r\n        case DELETE_PROJECT:\r\n                return {\r\n                    ...state,\r\n                    projects: state.projects.filter(project => project.projectIdentifier !== action.payload)\r\n                }\r\n        default:\r\n            return state\r\n    }\r\n}","import { SET_CURRENT_USER  } from \"./../actions/types\"\r\n\r\nconst initialState = {\r\n    user:{},\r\n    validToken: false\r\n}\r\n\r\nconst booleanActionPayload = payload => {\r\n    if(payload){\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function(state=initialState, action){\r\n    switch(action.type){\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                validToken:booleanActionPayload(action.payload),\r\n                user: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\"\r\nimport backlogReducer from \"./backlogReducer\"\r\nimport errorReducer from \"./errorReducer\"\r\nimport projectReducer from \"./projectReducer\"\r\nimport securityReducer from \"./securityReducer\"\r\n\r\nexport default combineReducers({\r\n    errors: errorReducer,\r\n    project: projectReducer,\r\n    backlog: backlogReducer,\r\n    security: securityReducer\r\n})\r\n\r\n","import  { createStore, applyMiddleware, compose } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst initialState = {}\r\nconst middleware = [thunk]\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() \r\n\r\nif(window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools ) {\r\n    store = createStore(\r\n        rootReducer, \r\n        initialState, \r\n        compose(\r\n            applyMiddleware(...middleware), \r\n            ReactReduxDevTools\r\n        )\r\n    )\r\n} else {\r\n    store = createStore(\r\n        rootReducer, \r\n        initialState, \r\n        compose(applyMiddleware(...middleware))\r\n    )\r\n}\r\n\r\n\r\nexport default store","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n                Create a Project\r\n            </Link>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateProjectButton;","import axios from \"axios\"\r\nimport { GET_ERRORS,  GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\"\r\n\r\nexport const createProject = ( project, history) => async dispatch => {\r\n    try{\r\n        await axios.post(\"/api/project\", project)\r\n        history.push(\"/dashboard\")\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n\r\n    } catch(err){\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n} \r\n\r\nexport const getProjects = () => async dispatch => {\r\n    const res = await axios.get(\"/api/project/all\")\r\n    dispatch({\r\n        type: GET_PROJECTS,\r\n        payload: res.data\r\n    })\r\n}\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n    try{\r\n        const res = await axios.get(`/api/project/${id}`)\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        })\r\n         \r\n    } catch(error){\r\n        history.push(\"/dashboard\")\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n    if(window.confirm(\" Are you sure?This will delete the project and all the data in it.\")){\r\n        await axios.delete(`/api/project/${id}`)\r\n        dispatch({\r\n            type: DELETE_PROJECT,\r\n            payload: id\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport PropTypes from \"prop-types\"\r\nimport { connect } from \"react-redux\"\r\nimport { deleteProject } from \"./../../actions/projectActions\"\r\n\r\nclass ProjectItem extends Component {\r\n\r\n    onDeleteClick = id => {\r\n        this.props.deleteProject(id)\r\n    }\r\n\r\n    render() {\r\n        const { project } = this.props\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card card-body bg-light mb-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n                        </div>\r\n                        <div className=\"col-lg-6 col-md-4 col-8\">\r\n                            <h3>{project.projectName}</h3>\r\n                            <p>{project.description}</p>\r\n                        </div>\r\n                        <div className=\"col-md-4 d-none d-lg-block\">\r\n                            <ul className=\"list-group\">\r\n                                <Link to={`/projectboard/${project.projectIdentifier}`}>\r\n                                    <li className=\"list-group-item board\">\r\n                                        <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                                    </li>\r\n                                </Link>\r\n                                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                                    <li className=\"list-group-item update\">\r\n                                        <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                                    </li>\r\n                                </Link>\r\n            \r\n                                <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}>\r\n                                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                                </li>\r\n                            \r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n    deleteProject:PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);","import React, { Component } from 'react'\r\nimport CreateProjectButton from './Project/CreateProjectButton';\r\nimport ProjectItem from './Project/ProjectItem';\r\nimport { connect } from \"react-redux\"\r\nimport { getProjects } from \"./../actions/projectActions.js\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass Dashboard extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.getProjects()\r\n    }\r\n\r\n    render() {\r\n\r\n        const { projects } = this.props.project\r\n\r\n        return (\r\n            <div className=\"projects\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h1 className=\"display-4 text-center\">Projects</h1>\r\n                            <br />\r\n                            <CreateProjectButton />\r\n                            <br />\r\n                            <hr />\r\n                            {projects.map(project => (\r\n                                <ProjectItem key={project.id} project={project}/>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    project:PropTypes.object.isRequired,\r\n    getProjects: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProjects})(Dashboard);","import axios from \"axios\"\r\n\r\nconst setJWTToken = token => { \r\n    if (token) {\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n}\r\n\r\nexport default setJWTToken","import axios from \"axios\"\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\"\r\nimport setJWTToken  from \"../securityUtils/setJWTToken\"\r\nimport jwt_decode from \"jwt-decode\"\r\n\r\nexport const createNewUser  = (newUser, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/users/register\", newUser)\r\n        history.push(\"/login\")\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n        \r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n} \r\n\r\nexport const login  = LoginRequest => async dispatch => {\r\n    try {\r\n\r\n        // post => Login request\r\n        const res =  await axios.post(\"/api/users/login\", LoginRequest)\r\n\r\n        // extract token from res.data \r\n        const { token } = res.data\r\n\r\n        // store the token in the localStorage\r\n        localStorage.setItem(\"jwtToken\", token)\r\n\r\n        // set our token in header *** \r\n        setJWTToken(token)\r\n\r\n        // decode the token on react \r\n        const decoded = jwt_decode(token)\r\n\r\n        // dispatch to our security reducer \r\n        dispatch({\r\n            type: SET_CURRENT_USER,\r\n            payload: decoded\r\n        })\r\n        \r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n} \r\n\r\n\r\nexport const logout = () => dispatch => { \r\n    localStorage.removeItem(\"jwtToken\")\r\n    setJWTToken(false)\r\n    dispatch = {\r\n        type:SET_CURRENT_USER,\r\n        payload: {}\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\nimport { logout } from \"./../../actions/securityActions.js\"\r\n\r\nclass Header extends Component {\r\n\r\n    logout() {\r\n        this.props.logout()\r\n        window.location.href = \"/\"\r\n    }\r\n\r\n    render() {\r\n\r\n        const { validToken, user } = this.props.security\r\n\r\n        const userIsNotAuthenticaded = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/register\">\r\n                        Sign Up\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/login\">\r\n                         Login  \r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n\r\n        const userIsAuthenticaded = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/dashboard\">\r\n                            Dashboard\r\n                    </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/dashboard\">\r\n                        <i className=\"fas fa-user-circle mr-1\" /> { user.fullName }\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/logout\" onClick={this.logout.bind(this)}>\r\n                            Logout\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n\r\n        let headerLinks\r\n\r\n        if(validToken && user) {\r\n            headerLinks = userIsAuthenticaded\r\n        } else {\r\n            headerLinks = userIsNotAuthenticaded\r\n        }\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        Personal Project Management Tool\r\n                </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n                    { headerLinks }\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security : state.security\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);","import React, { Component } from 'react'\r\nimport { getProject, createProject } from \"../../actions/projectActions\"\r\nimport PropTypes from \"prop-types\"\r\nimport { connect } from \"react-redux\"\r\nimport classnames from \"classnames\"\r\n\r\nclass UpdateProject extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors:{}\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this)   \r\n        this.onSubmit = this.onSubmit.bind(this)   \r\n    }\r\n\r\n    componentDidMount(){\r\n        const {id} = this.props.match.params\r\n        this.props.getProject(id, this.props.history)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors:nextProps.errors})\r\n        }\r\n\r\n        const { id,projectName, projectIdentifier, description, start_date, end_date} = nextProps.project\r\n        this.setState({id,projectName, projectIdentifier, description, start_date,end_date})\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault()\r\n\r\n        const updateProject = {\r\n            id: this.state.id,\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date \r\n        }\r\n\r\n        this.props.createProject(updateProject, this.props.history)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state \r\n\r\n        return (\r\n            <div className=\"project\">\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                    <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n                    <hr />\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className={classnames(\"form-control form-control-lg\",{\r\n                                            \"is-invalid\": errors.projectName})\r\n                            }\r\n                            placeholder=\"Project Name\"\r\n                            name=\"projectName\"\r\n                            value={this.state.projectName}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        {errors.projectName && (\r\n                                    <div className=\"invalid-feedback\">{errors.projectName}</div>)}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control form-control-lg\"\r\n                            placeholder=\"Unique Project ID\"\r\n                            name=\"projectIdentifier\"\r\n                            value={this.state.projectIdentifier}\r\n                            disabled\r\n                            onChange={this.onChange}\r\n                        />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <textarea\r\n                            className={classnames(\"form-control form-control-lg\",{\r\n                                            \"is-invalid\": errors.description})\r\n                            }\r\n                            placeholder=\"Project Description\"\r\n                            name=\"description\"\r\n                            value={this.state.description}\r\n                            onChange={this.onChange}\r\n                        />\r\n                         {errors.description && (\r\n                                    <div className=\"invalid-feedback\">{errors.description}</div>)}\r\n                        </div>\r\n                        <h6>Start Date</h6>\r\n                        <div className=\"form-group\">\r\n                        <input\r\n                            type=\"date\"\r\n                            className=\"form-control form-control-lg\"\r\n                            name=\"start_date\"\r\n                            value={this.state.start_date}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        </div>\r\n                        <h6>Estimated End Date</h6>\r\n                        <div className=\"form-group\">\r\n                        <input\r\n                            type=\"date\"\r\n                            className=\"form-control form-control-lg\"\r\n                            name=\"end_date\"\r\n                            value={this.state.end_date}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        </div>\r\n\r\n                        <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary btn-block mt-4\"\r\n                        />\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n    getProject: PropTypes.func.isRequired,\r\n    createProject: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    errors:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project:state.project.project,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProject, createProject})(UpdateProject)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\"\r\nimport { connect } from \"react-redux\"\r\nimport { createProject } from \"../../actions/projectActions\"\r\nimport classnames from \"classnames\"\r\n\r\nclass AddProject extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = { \r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors:{}\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors:nextProps.errors})\r\n        }\r\n    }\r\n\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault() \r\n\r\n        const newProject ={\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date\r\n        }\r\n        \r\n        this.props.createProject(newProject, this.props.history)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state\r\n    \r\n        return (\r\n            <div>  \r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h5 className=\"display-4 text-center\">Create / Edit Project form</h5>\r\n                            <hr />\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\",{\r\n                                            \"is-invalid\": errors.projectName})\r\n                                        }\r\n                                        placeholder=\"Project Name\" \r\n                                        name=\"projectName\"    \r\n                                        value={this.state.projectName}\r\n                                        onChange={this.onChange}                                    \r\n                                    />\r\n                                    {errors.projectName && (\r\n                                        <div className=\"invalid-feedback\">{errors.projectName}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\",{\r\n                                            \"is-invalid\": errors.projectIdentifier})\r\n                                        }\r\n                                        placeholder=\"Unique Project ID\" \r\n                                        name=\"projectIdentifier\"    \r\n                                        value={this.state.projectIdentifier}  \r\n                                        onChange={this.onChange}                                          \r\n                                    />\r\n\r\n                                    {errors.projectIdentifier && (\r\n                                        <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea \r\n                                           className={classnames(\"form-control form-control-lg\",{\r\n                                            \"is-invalid\": errors.description})\r\n                                        }\r\n                                        placeholder=\"Project Description\"\r\n                                        name=\"description\"\r\n                                        value={this.state.description}\r\n                                        onChange={this.onChange}    \r\n                                    />\r\n                                    {errors.description && (\r\n                                        <div className=\"invalid-feedback\">{errors.description}</div>)}\r\n                                </div>\r\n                                <h6>Start Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"date\" \r\n                                        className=\"form-control form-control-lg\" \r\n                                        name=\"start_date\"         \r\n                                        value={this.state.start_date}\r\n                                        onChange={this.onChange}    \r\n                                    />\r\n                                </div>\r\n                                <h6>Estimated End Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"date\" \r\n                                        className=\"form-control form-control-lg\" \r\n                                        name=\"end_date\" \r\n                                        value={this.state.end_date}\r\n                                        onChange={this.onChange}    \r\n                                    />\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddProject.propTypes = {\r\n    createProject : PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\nimport { deleteProjectTask } from \"./../../../actions/backlogActions\"\r\n\r\nclass ProjectTask extends Component {\r\n\r\n    onDeleteClick(backlog_id, pt_id){\r\n        this.props.deleteProjectTask(backlog_id, pt_id)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { projectTask } = this.props\r\n\r\n        let priorityString; \r\n        let priorityClass;\r\n\r\n        switch(projectTask.priority){\r\n            case 1:\r\n                priorityClass = \"bg-danger text-light\"\r\n                priorityString = \"HIGH\"\r\n                break;\r\n            case 2:\r\n                priorityClass = \"bg-warning text-light\"\r\n                priorityString = \"Medium\"\r\n                break;\r\n            case 3:\r\n                priorityClass = \"bg-info text-light\"\r\n                priorityString = \"INFO\"\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <div className=\"card mb-1 bg-light\">\r\n                <div className={`card-header text-primary ${priorityClass}`}>\r\n                    ID: {projectTask.projectSequence}   Priority: {priorityString}\r\n                </div>\r\n                <div className=\"card-body bg-light\">\r\n                    <h5 className=\"card-title\">{projectTask.summary}</h5>\r\n                    <p className=\"card-text text-truncate \">\r\n                        {projectTask.acceptanceCriteria}\r\n                    </p>\r\n                    <Link to={`/updateProjectTask/${projectTask.projectIdentifier}/${projectTask.projectSequence}`} className=\"btn btn-primary\">\r\n                        View / Update\r\n                    </Link>\r\n\r\n                    <button \r\n                        className=\"btn btn-danger ml-4\" \r\n                        onClick={this.onDeleteClick.bind(this, projectTask.projectIdentifier, projectTask.projectSequence )}>\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </div>                   \r\n        )\r\n    }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n    deleteProjectTask: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default connect( null, { deleteProjectTask })(ProjectTask)\r\n","import axios from \"axios\"\r\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"./types\"\r\n\r\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\r\n    try{\r\n        await axios.post(`/api/backlog/${backlog_id}`, project_task)\r\n        history.push(`/projectBoard/${backlog_id}`)\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    } catch (err) {\r\n        console.log(\"FOUND some error!!\")\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getBackLog = (backlog_id) => async dispatch => {\r\n    try{\r\n        const res = await axios.get(`/api/backlog/${backlog_id}`)\r\n\r\n        // console.log(res.data)\r\n        \r\n        dispatch({\r\n            type: GET_BACKLOG,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => { \r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`)\r\n        dispatch({\r\n            type: GET_PROJECT_TASK,\r\n            payload:res.data\r\n        })\r\n    } catch (err) {\r\n        history.push(\"/dashboard\")\r\n    }\r\n}\r\n\r\nexport const updateProjectTask = (backlog_id, pt_id, projectTask, history) => async dispatch => { \r\n    try {\r\n        await axios.put(`/api/backlog/${backlog_id}/${pt_id}`, projectTask)\r\n        history.push(`/projectBoard/${backlog_id}`)\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => { \r\n    if(window.confirm(`You are deleting project task ${pt_id} this action cannot be undone`)){\r\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`)\r\n        dispatch({\r\n            type: DELETE_PROJECT_TASK,\r\n            payload: pt_id\r\n        })    \r\n    }\r\n}","import React, { Component } from 'react'\r\nimport ProjectTask from './ProjectTasks/ProjectTask'\r\n\r\nclass Backlog extends Component {\r\n    render() {\r\n\r\n        const { projectTasks } = this.props\r\n\r\n        console.log(projectTasks)\r\n\r\n        const tasks = projectTasks.map(projectTask => (\r\n            <ProjectTask key={projectTask.id} projectTask={projectTask}/>\r\n        ))\r\n\r\n        const todoItems =  tasks.filter( task => task.props.projectTask.status === \"TO_DO\")\r\n        const inProgressItems = tasks.filter( task => task.props.projectTask.status === \"IN_PROGRESS\")\r\n        const doneItems =  tasks.filter( task => task.props.projectTask.status === \"DONE\")\r\n\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-secondary text-white\">\r\n                            <h3>TO DO</h3>\r\n                        </div>\r\n                    </div>\r\n                    {todoItems}\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-primary text-white\">\r\n                            <h3>In Progress</h3>\r\n                        </div>\r\n                    </div>\r\n                    {inProgressItems}\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-success text-white\">\r\n                            <h3>Done</h3>\r\n                        </div>\r\n                    </div>\r\n                    {doneItems}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Backlog \r\n","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport Backlog from './Backlog'\r\nimport { connect } from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\nimport { getBackLog } from \"./../../actions/backlogActions\"\r\n\r\n\r\nclass ProjectBoard extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            errors:{}\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors:nextProps.errors})\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { id } = this.props.match.params\r\n        this.props.getBackLog(id)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { id } = this.props.match.params\r\n        const { projectTasks } = this.props.backlog\r\n        const { errors } = this.state\r\n\r\n        const boardAlgorithm = ( errors, projectTasks ) => {\r\n            if(projectTasks.length < 1){\r\n                if(errors.projectNotFound){\r\n                    return (\r\n                    <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                       {errors.projectNotFound}\r\n                    </div>)\r\n                } else if(errors.projectIdentifier){\r\n                    return (\r\n                    <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                       {errors.projectIdentifier}\r\n                    </div>)\r\n                } else {\r\n                    return (\r\n                     <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                        No Project Tasks on this board\r\n                     </div>\r\n                    )\r\n                }\r\n            } else {\r\n                return <Backlog projectTasks={projectTasks}/> \r\n            }        \r\n        }\r\n\r\n        let BoardContent = boardAlgorithm(errors, projectTasks)\r\n\r\n        return (\r\n        <div className=\"container\">\r\n            <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n                        <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n            </Link>\r\n            <br />\r\n            <hr />\r\n            {BoardContent}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectBoard.propTypes = { \r\n    getBackLog:PropTypes.func.isRequired,\r\n    backlog:PropTypes.object.isRequired,\r\n    errors:PropTypes.object.isRequired\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => ({ \r\n    backlog : state.backlog,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { getBackLog })(ProjectBoard);","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport classnames from \"classnames\"\r\nimport { addProjectTask } from \"./../../../actions/backlogActions\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass AddProjectTask extends Component {\r\n\r\n    constructor(props){\r\n        super(props) \r\n\r\n        const { id } = this.props.match.params\r\n\r\n        this.state = {\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: 0,\r\n            dueDate: \"\",\r\n            projectIdentifier: id,\r\n            errors:{}\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors:nextProps.errors})\r\n        }\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const newProjectTask = {\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate\r\n         }\r\n\r\n        console.log(newProjectTask)\r\n\r\n        this.props.addProjectTask(this.state.projectIdentifier, newProjectTask, this.props.history)\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { id } = this.props.match.params\r\n        const { errors } = this.state\r\n\r\n        console.log(errors)\r\n\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                                Back to Project Board\r\n                            </Link>\r\n                            <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\",{\r\n                                            \"is-invalid\": errors.summary})\r\n                                        }\r\n                                        name=\"summary\" \r\n                                        placeholder=\"Project Task summary\" \r\n                                        value={this.state.summary}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.summary && (\r\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea \r\n                                        className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Acceptance Criteria\" \r\n                                        name=\"acceptanceCriteria\"\r\n                                        value={this.state.acceptanceCriteria}\r\n                                        onChange={this.onChange}\r\n                                    >    \r\n                                    </textarea>\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"date\" \r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"dueDate\" \r\n                                        value={this.state.dueDate}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select \r\n                                        className=\"form-control form-control-lg\" \r\n                                        name=\"priority\"\r\n                                        // value={this.state.priority}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n        \r\n                                <div className=\"form-group\">\r\n                                    <select \r\n                                        className=\"form-control form-control-lg\" \r\n                                        name=\"status\"\r\n                                        // value={this.state.status}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n        \r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask)\r\n","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport classnames from \"classnames\"\r\nimport PropTypes from \"prop-types\"\r\nimport { getProjectTask, updateProjectTask } from \"./../../../actions/backlogActions\"\r\n\r\nclass UpdateProjectTask extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            projectSequence: \"\",\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: \"\",\r\n            dueDate: \"\",\r\n            projectIdentifier: \"\",\r\n            created_at: \"\",\r\n            errors:{}\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {backlog_id, pt_id} = this.props.match.params\r\n        this.props.getProjectTask(backlog_id, pt_id, this.props.history)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n\r\n        let errors = {}\r\n\r\n        if (nextProps.errors) {\r\n            errors = nextProps.errors \r\n        }\r\n\r\n        const {\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            created_at\r\n        } = nextProps.projectTask\r\n\r\n        this.setState({\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            created_at,\r\n            errors\r\n        })\r\n\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    \r\n    onSubmit = (e) => {\r\n        e.preventDefault() \r\n\r\n        const updatedProjectTask = {\r\n            id: this.state.id,\r\n            projectSequence: this.state.projectSequence,\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            created_at:this.state.created_at\r\n        }\r\n\r\n        this.props.updateProjectTask(this.state.projectIdentifier, \r\n                                     this.state.projectSequence, \r\n                                     updatedProjectTask, \r\n                                     this.props.history\r\n                                    )\r\n    }\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state;\r\n\r\n        // console.log(this.state.dueDate);\r\n\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectboard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\r\n                                Back to Project Board\r\n                            </Link>\r\n                            <h4 className=\"display-4 text-center\">Add /Update Project Task</h4>\r\n                            <p className=\"lead text-center\">\r\n                            Project Name: {this.state.projectIdentifier} /  Project Task ID:{this.state.projectSequence}</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.summary\r\n                                        })}\r\n                                        name=\"summary\" \r\n                                        placeholder=\"Project Task summary\" \r\n                                        value={this.state.summary}\r\n                                        onChange={this.onChange} \r\n                                    />\r\n                                </div>\r\n                                {errors.summary && (\r\n                                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                )}\r\n                                <div className=\"form-group\">\r\n                                    <textarea \r\n                                        className=\"form-control form-control-lg\" \r\n                                        placeholder=\"Acceptance Criteria\" \r\n                                        name=\"acceptanceCriteria\"\r\n                                        value={this.state.acceptanceCriteria}\r\n                                        onChange={this.onChange} \r\n                                    >\r\n                                    </textarea>\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"date\" \r\n                                        className=\"form-control form-control-lg\" \r\n                                        name=\"dueDate\" \r\n                                        value={this.state.dueDate.split('T')[0]}\r\n                                        onChange={this.onChange} \r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select \r\n                                        className=\"form-control form-control-lg\" \r\n                                        name=\"priority\"\r\n                                        value={this.state.priority}\r\n                                        onChange={this.onChange} \r\n                                    >\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <select \r\n                                        className=\"form-control form-control-lg\" \r\n                                        name=\"status\"\r\n                                        value={this.state.status}\r\n                                        onChange={this.onChange} \r\n                                    >\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProjectTask.propTypes = { \r\n    getProjectTask: PropTypes.func.isRequired,\r\n    updateProjectTask: PropTypes.func.isRequired,\r\n    projectTask: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    projectTask: state.backlog.projectTask,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(UpdateProjectTask)","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass Landing extends Component {\r\n    componentDidMount() {\r\n        if(this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n                <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\r\n                                <p className=\"lead\">\r\n                                    Create your account to join active projects or start your own\r\n                                </p>\r\n                                <hr />\r\n                                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                                    Sign Up\r\n                                </Link>\r\n                                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                                    Login\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLanding.propTypes = {\r\n    security : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing)","import React, { Component } from 'react' \r\nimport { createNewUser } from \"./../../actions/securityActions\"\r\nimport PropTypes from \"prop-types\"\r\nimport  { connect } from \"react-redux\"\r\nimport classnames from \"classnames\"\r\n\r\nclass Register extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n\r\n        this.state={\r\n            \"username\":\"\",\r\n            \"fullName\": \"\",\r\n            \"password\":\"\",\r\n            \"confirmPassword\":\"\",\r\n            errors: {}\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\")\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors:nextProps.errors})\r\n        }\r\n    }\r\n    \r\n    onChange(e){\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault() \r\n\r\n        const newUser = {\r\n            \"username\": this.state.username,\r\n            \"fullName\": this.state.fullName,\r\n            \"password\": this.state.password,\r\n            \"confirmPassword\":this.state.confirmPassword\r\n        }\r\n\r\n        this.props.createNewUser(newUser, this.props.history)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state   \r\n\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">Create your Account</p>\r\n\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\",{\r\n                                            \"is-invalid\": errors.fullName})\r\n                                        }\r\n                                        placeholder=\"Full Name\" \r\n                                        name=\"fullName\"\r\n                                        value={this.state.fullName}\r\n                                        onChange={this.onChange}   \r\n                                         />\r\n                                {errors.fullName && (\r\n                                        <div className=\"invalid-feedback\">{errors.fullName}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\",{\r\n                                            \"is-invalid\": errors.username})\r\n                                        }\r\n                                        placeholder=\"Email Address\" \r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange}   \r\n                                         />\r\n                                    {errors.username && (\r\n                                        <div className=\"invalid-feedback\">{errors.username}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className={classnames(\"form-control form-control-lg\",{\r\n                                            \"is-invalid\": errors.password})\r\n                                        }\r\n                                        placeholder=\"Password\" \r\n                                        name=\"password\" \r\n                                        value={this.state.password}    \r\n                                        onChange={this.onChange}   \r\n                                        />\r\n                                    {errors.password && (\r\n                                        <div className=\"invalid-feedback\">{errors.password}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className={classnames(\"form-control form-control-lg\",{\r\n                                            \"is-invalid\": errors.confirmPassword})\r\n                                        } \r\n                                        placeholder=\"Confirm Password\"\r\n                                        name=\"confirmPassword\" \r\n                                        value={this.state.confirmPassword}  \r\n                                        onChange={this.onChange}     \r\n                                        />\r\n                                    {errors.confirmPassword && (\r\n                                        <div className=\"invalid-feedback\">{errors.confirmPassword}</div>)}\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    createNewUser: PropTypes.func.isRequired,\r\n    security: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors,\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps, { createNewUser})(Register)","import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\"\r\nimport { connect } from \"react-redux\"\r\nimport classnames from \"classnames\"\r\nimport { login } from \"../../actions/securityActions\"\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            \"username\":\"\",\r\n            \"password\":\"\",\r\n            errors:{}\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\")\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors:nextProps.errors})\r\n        }\r\n\r\n        if(nextProps.security.validToken){\r\n            this.props.history.push(\"/dashboard\")\r\n        }\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault()\r\n\r\n        const LoginRequest = {\r\n            \"username\": this.state.username,\r\n            \"password\": this.state.password,\r\n        }\r\n\r\n        this.props.login(LoginRequest)\r\n    }\r\n    \r\n    render() {\r\n\r\n        const { errors } = this.state   \r\n\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Log In</h1>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\",{\r\n                                            \"is-invalid\": errors.username})\r\n                                        } \r\n                                        placeholder=\"Email Address\" \r\n                                        name=\"username\" \r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange}\r\n                                        />\r\n                                    {errors.username && (\r\n                                        <div className=\"invalid-feedback\">{errors.username}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className={classnames(\"form-control form-control-lg\",{\r\n                                            \"is-invalid\": errors.password})\r\n                                        } \r\n                                        placeholder=\"Password\" \r\n                                        name=\"password\" \r\n                                        value={this.state.password} \r\n                                        onChange={this.onChange}\r\n                                        />\r\n                                    {errors.password && (\r\n                                        <div className=\"invalid-feedback\">{errors.password}</div>)}\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security:state.security,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login)","import React from 'react'\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n\r\nconst SecureRoute = ({component:Component, security, ...otherProps}) => (\r\n    <Route {...otherProps} \r\n        render={ \r\n            props => security.validToken === true ? (<Component {...props}/>)\r\n                                                    :\r\n                                                    (<Redirect to=\"/login\"/>)                                                  \r\n        }\r\n    />\r\n)\r\n\r\nSecureRoute.propTypes = ({\r\n    security: PropTypes.object.isRequired\r\n})\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps)(SecureRoute)","import React, { Component } from \"react\";\r\nimport './App.css';\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\"\r\nimport store  from \"./store\"\r\nimport Dashboard from './components/Dashboard';\r\nimport Header from './components/Layout/Header';\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\nimport AddProject from \"./components/Project/AddProject.jsx\";\r\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\r\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\r\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\r\nimport Landing from \"./components/Layout/Landing\";\r\nimport Register from \"./components/UserManagement/Register\";\r\nimport Login from \"./components/UserManagement/Login\";\r\nimport jwt_decode from \"jwt-decode\"\r\nimport setJWTToken from \"./securityUtils/setJWTToken\"\r\nimport { SET_CURRENT_USER } from \"./actions/types\";\r\nimport { logout } from \"./actions/securityActions\"\r\nimport SecureRoute from \"./securityUtils/SecureRoute\"\r\n\r\nconst jwtToken = localStorage.jwtToken\r\n\r\nif(jwtToken){\r\n  setJWTToken(jwtToken)\r\n  const decoded_jwtToken = jwt_decode(jwtToken)\r\n  store.dispatch({\r\n    type:SET_CURRENT_USER,\r\n    payload: decoded_jwtToken\r\n  })\r\n\r\n  // in milliseconds \r\n  const currentTime = Date.now() / 1000 \r\n\r\n  if(decoded_jwtToken.exp < currentTime) {\r\n    store.dispatch(logout())\r\n    // handle the logout \r\n    window.location.href = \"/\"\r\n  }\r\n\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\" >\r\n            <Header />\r\n            {\r\n              // Public routes\r\n            }\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/register\" component={Register} />  \r\n            <Route exact path=\"/login\" component={Login} />  \r\n            {\r\n              // Private Routes\r\n            }\r\n            <Switch>\r\n              <SecureRoute exact path=\"/dashboard\" component={Dashboard} />\r\n              <SecureRoute exact path=\"/addProject\" component={AddProject} />\r\n              <SecureRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\r\n              <SecureRoute exact path=\"/projectboard/:id\" component={ProjectBoard} />\r\n              <SecureRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\r\n              <SecureRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask} />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}